<!DOCTYPE html>
<html>
<head>
    <title>Webmin - RI Automation FREE</title>
    <meta charset="utf-8">
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }
        .header { background: #007cba; color: white; padding: 20px; border-radius: 5px; }
        .container { background: white; padding: 20px; margin: 20px 0; border-radius: 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .status { padding: 10px; margin: 10px 0; border-radius: 3px; }
        .status.success { background: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .status.warning { background: #fff3cd; color: #856404; border: 1px solid #ffeaa7; }
        .status.info { background: #d1ecf1; color: #0c5460; border: 1px solid #bee5eb; }
        .button { background: #007cba; color: white; padding: 10px 20px; border: none; border-radius: 3px; cursor: pointer; margin: 5px; }
        .button:hover { background: #005a87; }
        .metrics { display: flex; flex-wrap: wrap; gap: 20px; margin: 20px 0; }
        .metric { background: #f8f9fa; padding: 15px; border-radius: 5px; flex: 1; min-width: 200px; text-align: center; }
        .metric h3 { margin: 0 0 10px 0; color: #007cba; }
        .metric .value { font-size: 24px; font-weight: bold; color: #28a745; }
        table { width: 100%; border-collapse: collapse; margin: 20px 0; }
        th, td { padding: 12px; text-align: left; border-bottom: 1px solid #ddd; }
        th { background: #007cba; color: white; }
        .free-badge { background: #28a745; color: white; padding: 2px 8px; border-radius: 12px; font-size: 12px; }
    </style>
</head>
<body>
    <div class="header">
        <h1>🔄 RI Automation - FREE</h1>
        <p>Reserved Instances Automation completamente gratuita para Webmin/Virtualmin</p>
        <span class="free-badge">100% GRATIS</span>
    </div>

    <div class="container">
        <h2>📊 Estado del Sistema</h2>
        <div id="system-status" class="status info">
            Cargando estado del sistema...
        </div>

        <div class="metrics">
            <div class="metric">
                <h3>Servidores Analizados</h3>
                <div class="value" id="servers-count">-</div>
            </div>
            <div class="metric">
                <h3>Ahorros Potenciales</h3>
                <div class="value" id="savings-amount">$-</div>
            </div>
            <div class="metric">
                <h3>Recomendaciones</h3>
                <div class="value" id="recommendations-count">-</div>
            </div>
            <div class="metric">
                <h3>Último Análisis</h3>
                <div class="value" id="last-analysis">-</div>
            </div>
        </div>
    </div>

    <div class="container">
        <h2>🎯 Recomendaciones de RI</h2>
        <div id="recommendations-table">
            <p>Cargando recomendaciones...</p>
        </div>
    </div>

    <div class="container">
        <h2>⚙️ Acciones</h2>
        <button class="button" onclick="runAnalysis()">🔍 Ejecutar Análisis</button>
        <button class="button" onclick="generateReport()">📄 Generar Reporte</button>
        <button class="button" onclick="viewConfig()">⚙️ Ver Configuración</button>
        <button class="button" onclick="checkStatus()">🔄 Verificar Estado</button>
    </div>

    <div class="container">
        <h2>📋 Información del Sistema</h2>
        <ul>
            <li><strong>Versión:</strong> FREE-1.0.0</li>
            <li><strong>Modo:</strong> Simulación (Sin costos)</li>
            <li><strong>Intervalo de análisis:</strong> 24 horas</li>
            <li><strong>Integración:</strong> Webmin + Virtualmin</li>
            <li><strong>Costo:</strong> <span style="color: #28a745; font-weight: bold;">$0.00 (GRATIS)</span></li>
        </ul>
    </div>

    <script>
        // Cargar datos al iniciar
        window.onload = function() {
            loadSystemStatus();
            loadRecommendations();
        };

        function loadSystemStatus() {
            fetch('index.cgi?action=status')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('system-status').innerHTML = data.status;
                    document.getElementById('system-status').className = 'status ' + (data.status_type || 'info');

                    if (data.metrics) {
                        document.getElementById('servers-count').textContent = data.metrics.servers || '-';
                        document.getElementById('savings-amount').textContent = '$' + (data.metrics.savings || '0');
                        document.getElementById('recommendations-count').textContent = data.metrics.recommendations || '-';
                        document.getElementById('last-analysis').textContent = data.metrics.last_analysis || '-';
                    }
                })
                .catch(error => {
                    document.getElementById('system-status').innerHTML = 'Error cargando estado: ' + error.message;
                    document.getElementById('system-status').className = 'status warning';
                });
        }

        function loadRecommendations() {
            fetch('index.cgi?action=recommendations')
                .then(response => response.json())
                .then(data => {
                    let html = '<table>';
                    html += '<tr><th>Servidor</th><th>Tipo de Instancia</th><th>Ahorro Mensual</th><th>Break-even</th><th>Acción</th></tr>';

                    if (data.recommendations && data.recommendations.length > 0) {
                        data.recommendations.forEach(rec => {
                            html += `<tr>
                                <td>${rec.server_name || 'N/A'}</td>
                                <td>${rec.instance_type || 'N/A'}</td>
                                <td>$${rec.monthly_savings || 0}</td>
                                <td>${rec.break_even_months || 'N/A'} meses</td>
                                <td><span class="free-badge">SIMULAR</span></td>
                            </tr>`;
                        });
                    } else {
                        html += '<tr><td colspan="5">No hay recomendaciones disponibles</td></tr>';
                    }

                    html += '</table>';
                    document.getElementById('recommendations-table').innerHTML = html;
                })
                .catch(error => {
                    document.getElementById('recommendations-table').innerHTML = 'Error cargando recomendaciones: ' + error.message;
                });
        }

        function runAnalysis() {
            if (confirm('¿Ejecutar análisis gratuito de RI? Esto no generará costos.')) {
                fetch('index.cgi?action=run_analysis', { method: 'POST' })
                    .then(response => response.json())
                    .then(data => {
                        alert(data.message || 'Análisis completado');
                        loadSystemStatus();
                        loadRecommendations();
                    })
                    .catch(error => alert('Error: ' + error.message));
            }
        }

        function generateReport() {
            window.open('index.cgi?action=download_report', '_blank');
        }

        function viewConfig() {
            window.open('index.cgi?action=view_config', '_blank');
        }

        function checkStatus() {
            loadSystemStatus();
            alert('Estado actualizado');
        }

        // Auto-refresh cada 5 minutos
        setInterval(function() {
            loadSystemStatus();
        }, 300000);
    </script>
</body>
</html>